{"ast":null,"code":"import { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./notificacao.service\";\nfunction NotificacaoComponent_mat_list_item_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-list-item\")(1, \"mat-icon\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 8);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const m_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(m_r1.status === \"PROCESSADO_SUCESSO\" ? \"check_circle\" : m_r1.status === \"AGUARDANDO_PROCESSAMENTO\" ? \"hourglass_empty\" : \"error\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(m_r1.conteudo);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\"\", m_r1.id, \" \\u2014 \", m_r1.status, \"\");\n  }\n}\nexport let NotificacaoComponent = /*#__PURE__*/(() => {\n  class NotificacaoComponent {\n    constructor(service) {\n      this.service = service;\n      this.conteudoMensagem = '';\n      this.mensagens = [];\n    }\n    enviar() {\n      if (!this.conteudoMensagem || !this.conteudoMensagem.trim()) return;\n      const mensagemId = uuid();\n      const conteudo = this.conteudoMensagem.trim();\n      this.service.enviar(mensagemId, conteudo).subscribe({\n        next: resp => {\n          this.mensagens.unshift({\n            id: mensagemId,\n            conteudo,\n            status: 'AGUARDANDO_PROCESSAMENTO'\n          });\n          this.conteudoMensagem = '';\n          const interval = setInterval(() => {\n            this.service.obterStatus(mensagemId).subscribe({\n              next: r => {\n                const msg = this.mensagens.find(m => m.id === mensagemId);\n                if (msg) msg.status = r.status;\n                if (r.status !== 'AGUARDANDO_PROCESSAMENTO') {\n                  clearInterval(interval);\n                }\n              },\n              error: () => {\n                // continua polling, possivelmente ainda não processado\n              }\n            });\n          }, 3000);\n        },\n        error: err => {\n          console.error('Erro ao enviar', err);\n        }\n      });\n    }\n    static {\n      this.ɵfac = function NotificacaoComponent_Factory(t) {\n        return new (t || NotificacaoComponent)(i0.ɵɵdirectiveInject(i1.NotificacaoService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: NotificacaoComponent,\n        selectors: [[\"app-notificacao\"]],\n        decls: 15,\n        vars: 2,\n        consts: [[\"appearance\", \"fill\", 2, \"width\", \"100%\"], [\"matInput\", \"\", \"placeholder\", \"Mensagem\", 3, \"ngModel\", \"ngModelChange\"], [2, \"text-align\", \"right\", \"margin-top\", \"8px\"], [\"mat-raised-button\", \"\", \"color\", \"primary\", 3, \"click\"], [2, \"margin-top\", \"16px\"], [4, \"ngFor\", \"ngForOf\"], [\"matListIcon\", \"\"], [\"matLine\", \"\"], [\"matLine\", \"\", 2, \"font-size\", \"12px\", \"color\", \"gray\"]],\n        template: function NotificacaoComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"mat-card\")(1, \"mat-card-title\");\n            i0.ɵɵtext(2, \"Enviar Notifica\\u00E7\\u00E3o\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(3, \"mat-card-content\")(4, \"mat-form-field\", 0)(5, \"input\", 1);\n            i0.ɵɵlistener(\"ngModelChange\", function NotificacaoComponent_Template_input_ngModelChange_5_listener($event) {\n              return ctx.conteudoMensagem = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(6, \"div\", 2)(7, \"button\", 3);\n            i0.ɵɵlistener(\"click\", function NotificacaoComponent_Template_button_click_7_listener() {\n              return ctx.enviar();\n            });\n            i0.ɵɵtext(8, \"Enviar Notifica\\u00E7\\u00E3o\");\n            i0.ɵɵelementEnd()()()();\n            i0.ɵɵelementStart(9, \"mat-card\", 4)(10, \"mat-card-title\");\n            i0.ɵɵtext(11, \"Mensagens\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(12, \"mat-card-content\")(13, \"mat-list\");\n            i0.ɵɵtemplate(14, NotificacaoComponent_mat_list_item_14_Template, 7, 4, \"mat-list-item\", 5);\n            i0.ɵɵelementEnd()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(5);\n            i0.ɵɵproperty(\"ngModel\", ctx.conteudoMensagem);\n            i0.ɵɵadvance(9);\n            i0.ɵɵproperty(\"ngForOf\", ctx.mensagens);\n          }\n        },\n        styles: [\"mat-card[_ngcontent-%COMP%]{max-width:800px;margin:auto}mat-list-item[_ngcontent-%COMP%]{align-items:start}\"]\n      });\n    }\n  }\n  return NotificacaoComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}